// This file is generated automatically by Next.js
// Do not edit this file manually
// This file validates that all pages and layouts export the correct types

import type { AppRoutes, LayoutRoutes, ParamMap } from "./routes.js"
import type { ResolvingMetadata, ResolvingViewport } from "next/dist/lib/metadata/types/metadata-interface.js"

type AppPageConfig<Route extends AppRoutes = AppRoutes> = {
  default: React.ComponentType<{ params: Promise<ParamMap[Route]> } & any> | ((props: { params: Promise<ParamMap[Route]> } & any) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}

type LayoutConfig<Route extends LayoutRoutes = LayoutRoutes> = {
  default: React.ComponentType<LayoutProps<Route>> | ((props: LayoutProps<Route>) => React.ReactNode | Promise<React.ReactNode> | never | void | Promise<void>)
  generateStaticParams?: (props: { params: ParamMap[Route] }) => Promise<any[]> | any[]
  generateMetadata?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingMetadata
  ) => Promise<any> | any
  generateViewport?: (
    props: { params: Promise<ParamMap[Route]> } & any,
    parent: ResolvingViewport
  ) => Promise<any> | any
  metadata?: any
  viewport?: any
}


// Validate ../../src/app/about/page.tsx
{
  const handler = {} as typeof import("../../src/app/about/page.js")
  handler satisfies AppPageConfig<"/about">
}

// Validate ../../src/app/admin-portal-7k9x2m/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin-portal-7k9x2m/page.js")
  handler satisfies AppPageConfig<"/admin-portal-7k9x2m">
}

// Validate ../../src/app/admin/page.tsx
{
  const handler = {} as typeof import("../../src/app/admin/page.js")
  handler satisfies AppPageConfig<"/admin">
}

// Validate ../../src/app/browse/page.tsx
{
  const handler = {} as typeof import("../../src/app/browse/page.js")
  handler satisfies AppPageConfig<"/browse">
}

// Validate ../../src/app/checkout/page.tsx
{
  const handler = {} as typeof import("../../src/app/checkout/page.js")
  handler satisfies AppPageConfig<"/checkout">
}

// Validate ../../src/app/contact/page.tsx
{
  const handler = {} as typeof import("../../src/app/contact/page.js")
  handler satisfies AppPageConfig<"/contact">
}

// Validate ../../src/app/explore/page.tsx
{
  const handler = {} as typeof import("../../src/app/explore/page.js")
  handler satisfies AppPageConfig<"/explore">
}

// Validate ../../src/app/page.tsx
{
  const handler = {} as typeof import("../../src/app/page.js")
  handler satisfies AppPageConfig<"/">
}

// Validate ../../src/app/restaurant-dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/restaurant-dashboard/page.js")
  handler satisfies AppPageConfig<"/restaurant-dashboard">
}

// Validate ../../src/app/restaurant/[id]/page.tsx
{
  const handler = {} as typeof import("../../src/app/restaurant/[id]/page.js")
  handler satisfies AppPageConfig<"/restaurant/[id]">
}

// Validate ../../src/app/restaurants/page.tsx
{
  const handler = {} as typeof import("../../src/app/restaurants/page.js")
  handler satisfies AppPageConfig<"/restaurants">
}

// Validate ../../src/app/rider-dashboard/page.tsx
{
  const handler = {} as typeof import("../../src/app/rider-dashboard/page.js")
  handler satisfies AppPageConfig<"/rider-dashboard">
}

// Validate ../../src/app/riders/page.tsx
{
  const handler = {} as typeof import("../../src/app/riders/page.js")
  handler satisfies AppPageConfig<"/riders">
}

// Validate ../../src/app/track-order/page.tsx
{
  const handler = {} as typeof import("../../src/app/track-order/page.js")
  handler satisfies AppPageConfig<"/track-order">
}







// Validate ../../src/app/layout.tsx
{
  const handler = {} as typeof import("../../src/app/layout.js")
  handler satisfies LayoutConfig<"/">
}
